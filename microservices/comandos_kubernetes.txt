Criando secrets do banco de dados:
kubectl create secret generic mysql-server-credentials \
    --from-literal=MYSQL_ROOT_PASSWORD=megatron \
    --from-literal=MYSQL_DATABASE=boutique \
    --save-config

Criando o configmap da base de dados:
 kubectl create configmap config-repo-product --from-file=config-repo/application.yml --from-file=config-repo/product.yml --save-config
 kubectl create configmap config-repo-order --from-file=config-repo/application.yml --from-file=config-repo/product.yml --save-config
 kubectl create configmap config-repo-customer --from-file=config-repo/application.yml --from-file=config-repo/product.yml --save-config

Listando o configmap:
 kubectl get cm mysql-config -o json

Criando secret:
 kubectl create secret generic db-security --from-literal=db.user.name=root --from-literal=db.user.password=megatron
 kubectl get secret db-security -o json


Criando configmap de cada serviço:
 kubectl create configmap order --from-file=application.yaml=application.yaml
 kubectl create configmap customer --from-file=application.yaml=application.yaml
 kubectl create configmap product --from-file=application.yaml=application.yaml

Autorizando o serviceaccount para acessar o configmap do mesmo namespace:
 kubectl create clusterrolebinding configmap-access --clusterrole view --serviceaccount=default:spring

Instalando o EFK (necessita antes instalar o helm - um gerenciador de pacotes para o kubernetes)
 helm repo add akomljen-charts  https://raw.githubusercontent.com/komljen/helm-charts/master/charts/
 helm install es-operator --namespace logging akomljen-charts/elasticsearch-operator
 helm install efk --namespace logging akomljen-charts/efk
 ver as apís instaladas: kubectl get crd

Gateway do kubernetes:
 kubectl create -f gateway.yaml

Habilitando o minikube:
  minikube addons enable ingress


